"""
Django settings for Blog project.

Generated by 'django-admin startproject' using Django 3.2.9.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-4b-c8d&6i-j^ej#r9&w&lgztv*ddu_ogsi001+c$f)u=e@$b)u'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# Caso queira rodar em qualquer aparelho dentro da sua rede, basta colocar como allowed_hosts o ip da sua máquina
# e rodar o server com o IPv4 da máquina e a porta desejada: python manage.py runserver ip_computer:port
# ALLOWED_HOSTS = ['192.168.0.176']
ALLOWED_HOSTS = []

if DEBUG:  # Caso seja modo de desenvolvimento
    EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
else:
    # A configuração de envio para um email real, isso veremos nos próximo capítulos
    ...

# Application definition

INSTALLED_APPS = [

    # Django App's
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Third Party's
    'django_cleanup.apps.CleanupConfig',
    'rest_framework',
    'rest_framework.authtoken',

    # Meus App's
    'personal.apps.PersonalConfig',
    'account.apps.AccountConfig',
    'post.apps.PostConfig',

]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication'
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated'
    ],
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Blog.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Blog.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

# Essas variáveis são como o Django irá referenciar os arquivos como static e js para static_url e arquivos de mídia como
# png, pdf, videos etc, são os caminhos que serão buscados o dados, porém quando se vem de uma fonte externa que é o
# recomendado, é direcionado para o caminho em STATIC_ROOT e MEDIA_ROOT que são os caminhos do cdn criado
STATIC_URL = '/static/'
MEDIA_URL = '/media/'

#  Todos os caminhos que o django irá procurar por static files
STATICFILES_DIRS = [
    BASE_DIR / 'static',
    BASE_DIR / 'media',
    BASE_DIR / 'templates/static',
]

# Caminho para os arquivos em um cdn como o aws s3
STATIC_ROOT = BASE_DIR / 'static_cdn'
MEDIA_ROOT = BASE_DIR / 'media_cdn'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'account.Account'
